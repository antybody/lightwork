<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">	
                        
   <!-- 自动扫描-->
	<context:component-scan base-package="com.baosight" /> 
	<mvc:annotation-driven />
	
	<!-- 引入配置文件 
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:/config/jdbc.properties" />
	</bean>-->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:/config/jdbc.properties</value>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>
	
	<!-- 将dbcp 平滑更换为 druid -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"></property>
		
		<property name="filters" value="stat,wall,log4j"/>  <!-- 防火墙  日志  -->
    	<property name="proxyFilters">
        	<list>
            	<ref bean="stat-filter" />
        	</list>
    	</property>
    	<property name="useGlobalDataSourceStat" value="true" />   <!-- 合并多个DruidDataSource的监控数据 -->
	</bean>
	
	<!-- druid配置 -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
    	<property name="slowSqlMillis" value="600" />  <!-- 慢sql记录 3s-->
     	<property name="logSlowSql" value="true" />
     	<property name="mergeSql" value="true" />	<!--sql合并配置 -->
	</bean>
	

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis.cfg.xml文件 -->
        <property name="configLocation" value="classpath:/config/mybatis-cfg.xml"></property>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/baosight/**/*.xml"></property>
		<property name="configurationProperties">
			<props>
				<prop key="cacheEnabled">true</prop>
				<prop key="lazyLoadingEnabled">false</prop>
				<prop key="aggressiveLazyLoading">true</prop>
			</props>
		</property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.baosight" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	 <!-- 6. redis配置  --> 
    <context:property-placeholder location="classpath:/config/redis.properties" ignore-unresolvable="true"/>
    <bean id="jedisConfig" class="redis.clients.jedis.JedisPoolConfig">
         <property name="maxIdle" value="${redis_max_idle}"></property>
         <property name="maxActive" value="${redis_max_total}"></property>
         <property name="maxWait" value="${redis_max_wait}"></property>
         <property name="testOnBorrow" value="${redis_test_on_borrow}"></property>
    </bean>
    <!--p:password="${redis_auth}"  -->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
     	    p:host-name="${redis_addr}" p:port="${redis_port}"  p:password="${redis_auth}"
        	p:pool-config-ref="jedisConfig" />
     <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />  
    </bean>
</beans>